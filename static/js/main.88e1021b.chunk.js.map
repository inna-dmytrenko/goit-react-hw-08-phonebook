{"version":3,"sources":["Components/Navigation/Navigation.jsx","Components/AuthNav/AuthNav.jsx","Components/UserMenu/UserMenu.jsx","Components/AppBar/AppBar.jsx","Components/Container/Container.jsx","Components/PrivateRoute.js","Components/PublicRoute.js","views/Loader.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/auth/auth-operations.js","Components/Navigation/Navigation.module.css","Components/AuthNav/AuthNav.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","views/View.module.css","redux/contacts/contacts-actions.js","Components/AppBar/AppBar.module.css","Components/UserMenu/UserMenu.module.css","Components/Container/Container.module.css"],"names":["Navigation","isLoggedIn","useSelector","contactsSelectors","getLoggedIn","className","styles","nav","exact","link","activeClassName","activeLink","to","authNav","UserMenu","dispatch","useDispatch","name","authSelectors","getUsername","useStyles","makeStyles","theme","margin","spacing","createTheme","palette","primary","green","classes","alt","width","title","ThemeProvider","Button","variant","color","type","onClick","authOperations","logOut","AppBar","getIsLoggedIn","header","Container","children","container","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","Spinner","spinner","height","PhoneBookList","lazy","FormRegister","FormLogin","HomeView","App","useEffect","fetchCurrentUser","fallback","path","component","contacts","createReducer","fetchContacts","fulfilled","_","action","payload","addContacts","state","deleteContacts","filter","id","filterReducer","filterItem","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phonebook","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","user","authSlice","createSlice","initialState","email","token","isFetchingCurrentUser","extraReducers","register","logIn","pending","rejected","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","a","post","data","console","log","message","operations","thunkAPI","getState","persistedToken","rejectWithValue","get","module","exports","contact","contactId","delete","getFilter","getContacts","createAction"],"mappings":"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","file":"static/js/main.88e1021b.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './Navigation.module.css'\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors'\r\nexport default function Navigation() {\r\n  const isLoggedIn=useSelector(contactsSelectors.getLoggedIn)\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <NavLink\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n        to=\"/\"\r\n      >\r\n        Phonebook\r\n      </NavLink>\r\n      {isLoggedIn&&  <NavLink\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n        to=\"/contacts\"\r\n      >\r\n        Contacts\r\n      </NavLink>}\r\n      \r\n    </nav>\r\n  )\r\n}\r\n","import { NavLink } from 'react-router-dom'\r\nimport styles from './AuthNav.module.css'\r\nexport default function Navigation() {\r\n  return (\r\n\r\n\r\n\r\n    \r\n    <div className={styles.authNav}>\r\n\r\n\r\n      \r\n      <NavLink\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n        to=\"/login\"\r\n      >\r\n        Log In\r\n      </NavLink>\r\n      <NavLink\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n        to=\"/register\"\r\n      >\r\n        Sign Up\r\n      </NavLink>\r\n      \r\n     \r\n    </div>\r\n  )\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport { authOperations, authSelectors } from '../../redux/auth'\r\n\r\nimport { createTheme,  makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport styles from './UserMenu.module.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch()\r\n  const name = useSelector(authSelectors.getUsername)\r\n \r\n  const useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  }));\r\n  const theme = createTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n  });\r\n    const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <img alt=\"\" width=\"32\" />\r\n      <span className={styles.title}>Добро пожаловать, {name} </span>\r\n       <ThemeProvider theme={theme}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.margin} type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n          <ExitToAppIcon/>\r\n        </Button>\r\n        </ThemeProvider>\r\n   \r\n    </div>\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport Navigation from '../Navigation/Navigation'\r\nimport styles from './AppBar.module.css'\r\nimport AuthNav from '../AuthNav/AuthNav'\r\nimport UserMenu from '../UserMenu/UserMenu'\r\nimport { authSelectors } from '../../redux/auth'\r\n\r\n\r\n\r\nexport const AppBar = () => {\r\n  \r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  )\r\n}\r\n","import styles from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * 1. Он должен повторять API Route\n *  2. Он должен рендерить Route\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на redirectTo\n */\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\n * - В противном случае рендерит компонент\n *\n */\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import Loader from 'react-loader-spinner';\r\nimport styles from './View.module.css';\r\nconst Spinner = () => (\r\n  <div className={styles.spinner}>\r\n    <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\r\n  </div>\r\n);\r\nexport default Spinner;","import { Switch } from 'react-router-dom';\nimport { Suspense, useEffect, lazy } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport authOperations from './redux/auth/auth-operations';\nimport { AppBar } from './Components/AppBar/AppBar';\nimport Container from './Components/Container/Container.jsx';\n\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\nimport Spinner from './views/Loader';\n\n// import FormRegister from './views/FormRegister';\n// import FormLogin from './views/FormLogin';\n// import HomeView from './views/HomeView';\n// import PhoneBookList from './Components/PhoneBookList/PhoneBookList';\n\nconst PhoneBookList = lazy(() =>\n  import('./Components/PhoneBookList/PhoneBookList'),\n);\nconst FormRegister = lazy(() => import('./views/FormRegister'));\nconst FormLogin = lazy(() => import('./views/FormLogin'));\nconst HomeView = lazy(() => import('./views/HomeView'));\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n  return (\n    <Container>\n      <AppBar />\n      <Switch>\n        <Suspense fallback={<Spinner />}>\n          <PublicRoute path=\"/\" exact component={HomeView} />\n          <PrivateRoute\n            path=\"/contacts\"\n            redirectTo=\"/login\"\n            component={PhoneBookList}\n          />\n          <PublicRoute\n            restricted\n            path=\"/login\"\n            redirectTo=\"/contacts\"\n            component={FormLogin}\n          />\n          <PublicRoute\n            redirectTo=\"/contacts\"\n            restricted\n            path=\"/register\"\n            exact\n            component={FormRegister}\n          />\n        </Suspense>\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","// import { combineReducers } from 'redux';\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { filterItem } from './contacts-actions';\n\n\nimport {\n  fetchContacts,\n  addContacts,\n  deleteContacts,\n} from './contacts-operations';\n\nconst contacts = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addContacts.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [filterItem]: (_, { payload }) => payload,\n});\nexport const contactsReducer = combineReducers({\n  contacts,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts/contacts-reducer';\nimport { authReducer } from './auth';\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    phonebook: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// const getIsLoggedIn = (state) => state.auth.getIsLoggedIn\r\nconst getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\n\r\nconst getUsername = (state) => state.auth.user.name;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n};\r\nexport default authSelectors;\r\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled]: (state, { payload }) => ({\n      ...state,\n      user: payload.user,\n      token: payload.token,\n      isLoggedIn: true,\n    }),\n    [authOperations.logIn.fulfilled]: (state, { payload }) => ({\n      ...state,\n      user: payload.user,\n      token: payload.token,\n      isLoggedIn: true,\n    }),\n    [authOperations.logOut.fulfilled]: (state, _) => ({\n      ...state,\n      user: { name: null, email: null },\n      token: null,\n      isLoggedIn: false,\n    }),\n    [authOperations.fetchCurrentUser.fulfilled]: (state, { payload }) => ({\n      ...state,\n      user: payload,\n      isLoggedIn: true,\n      isFetchingCurrentUser: false,\n    }),\n    [authOperations.fetchCurrentUser.pending]: state => ({\n      ...state,\n      isFetchingCurrentUser: true,\n    }),\n    [authOperations.fetchCurrentUser.rejected]: state => ({\n      ...state,\n      isFetchingCurrentUser: false,\n    }),\n  },\n});\n\nexport default authSlice.reducer;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    console.log(error.message);\n  }\n});\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('users/current');\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__3CmRR\",\"link\":\"Navigation_link__2sdK0\",\"activeLink\":\"Navigation_activeLink__hLZmg Navigation_link__2sdK0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authNav\":\"AuthNav_authNav__2t_GK\",\"link\":\"AuthNav_link__1NIQl\",\"activeLink\":\"AuthNav_activeLink__3bmjK AuthNav_link__1NIQl\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    try {\n      const { data } = await axios.get('./contacts');\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\nexport const addContacts = createAsyncThunk(\n  'contacts/addContacts',\n  async contact => {\n    try {\n      const { data } = await axios.post('./contacts', contact);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContacts',\n  async contactId => {\n    try {\n      await axios.delete(`./contacts/${contactId}`);\n      return contactId;\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\n","// import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoggedIn = state => state.auth.isLoggedIn;\nconst getFilter = state => state.phonebook.filter;\nconst getContacts = state => state.phonebook.contacts;\n// const getLoading = state => console.log(state);\nconst contactsSelectors = {\n  getLoggedIn,\n  getFilter,\n  getContacts,\n};\nexport default contactsSelectors;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"View_home__3PNll\",\"title\":\"View_title__3GiQ9\",\"spinner\":\"View_spinner__vnSth\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterItem = createAction('phonebook/filter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1greN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"UserMenu_title__OD6iC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3kZUm\"};"],"sourceRoot":""}