{"version":3,"sources":["Components/PhoneBookList/PhoneBookList.module.css","Components/PhoneBookEditor/PhoneBookEditor.module.css","Components/PhoneBook/PhoneBook.module.css","Components/PhoneBookEditor/PhoneBookEditor.jsx","Components/PhoneBook/PhoneBook.jsx","Components/PhoneBookFilter/PhoneBookFilter.jsx","helpers/FilterContacts.jsx","Components/PhoneBookList/PhoneBookList.jsx"],"names":["module","exports","PhoneBookEditor","classes","makeStyles","theme","margin","spacing","useStyles","dispatch","useDispatch","data","useSelector","contactsSelectors","getContacts","useState","name","setName","number","setNumber","resetForm","handleChange","e","target","value","onSubmit","preventDefault","some","el","toast","addContacts","InputLabel","className","htmlFor","Input","required","placeholder","type","pattern","title","onChange","startAdornment","InputAdornment","position","styles","fab","Fab","color","PhoneBook","id","root","maxWidth","flexGrow","backgroundColor","media","height","paddingTop","padding","textAlign","palette","text","secondary","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","grid","Grid","item","xs","Paper","paper","Card","CardHeader","Avatar","onClick","deleteContacts","CardActions","disableSpacing","PhoneBookFilter","getFilter","TextField","event","filterItem","label","filterContacts","contacts","filter","normalizedFilter","toLowerCase","trim","console","log","contact","includes","PhoneBookList","useEffect","fetchContacts","sm","Box","bgcolor","p","length","map"],"mappings":"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","file":"static/js/5.8266d1e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"PhoneBookList_grid__Hmkqg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fab\":\"PhoneBookEditor_fab__1XtdV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"PhoneBook_grid__3A_Ci\"};","import 'react-toastify/dist/ReactToastify.css'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {addContacts} from '../../redux/contacts/contacts-operations'\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport styles from './PhoneBookEditor.module.css'\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\r\nfunction PhoneBookEditor() {\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n  \r\n  \r\n    const classes = useStyles();\r\n\r\n  const dispatch = useDispatch()\r\n  const data = useSelector(contactsSelectors.getContacts)\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n \r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  \r\n  }\r\n  const handleChange = (e) => {\r\n// console.log({ target: { name, value } })\r\n      const name = e.target.name\r\n\r\n    const value = e.target.value\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value)\r\n      case 'number':\r\n        return setNumber(value)\r\n     \r\n      default:\r\n        return\r\n    }\r\n  }\r\n  \r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\nif (\r\n      data.some((el) => el.name === name) ||\r\n  data.some((el) => el.number === number)\r\n\r\n    ) {\r\n      resetForm();\r\n      return toast(`${name} is already in contacts`)\r\n    }\r\n    dispatch(addContacts({ name, number }));\r\n    // console.log(dispatch(addContacts({ name, number, email })))\r\n    resetForm();\r\n    // setForm(formInitialState)\r\n   \r\n  }\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <InputLabel className={classes.margin} htmlFor=\"\"/>\r\n          <Input\r\n   \r\n            required\r\n            placeholder=\"Search name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            onChange={handleChange}\r\n            startAdornment={\r\n              \r\n              <InputAdornment position=\"start\">\r\n                <AccountCircle />\r\n              </InputAdornment>}\r\n              \r\n          />\r\n          {/* <Grid item>\r\n            <AccountCircle />\r\n          </Grid> */}\r\n        </div>\r\n\r\n        <div>\r\n          {/* <Grid item>\r\n            <TextField id=\"input-with-icon-grid\" label=\"Number\" />\r\n          </Grid> */}\r\n          <InputLabel className={classes.margin}  htmlFor=\"\"/>\r\n          <Input\r\n           \r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            placeholder=\"Search number\"\r\n            onChange={handleChange}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <ContactPhoneIcon />\r\n              </InputAdornment>\r\n            }\r\n            \r\n          />\r\n        </div>\r\n        <div className={styles.fab}>\r\n          \r\n              <Fab  color=\"primary\" aria-label=\"add\" type=\"submit\" >\r\n         <AddIcon  />\r\n        </Fab>\r\n        </div>\r\n        \r\n        {/* <button type=\"submit\">Add contact</button> */}\r\n      </form>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PhoneBookEditor","import { BsTrashFill } from 'react-icons/bs'\r\nimport { useDispatch } from 'react-redux'\r\nimport React from 'react';\r\n// import { Frame } from './PhoneBook.styled'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styles from './PhoneBook.module.css'\r\nimport { deleteContacts } from '../../redux/contacts/contacts-operations'\r\n\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\n\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\n\r\nconst PhoneBook = ({ name, number, id }) => {\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n\r\n    backgroundColor: '#6bc56b',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n     padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,// 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: '#3f51b5',\r\n  },\r\n}));\r\n\r\n\r\n  const classes = useStyles();\r\n \r\n\r\n\r\n\r\n\r\n\r\nconst dispatch= useDispatch()\r\n  return (\r\n    <div className={styles.grid}>\r\n\r\n    <Grid className={styles.grid} item xs={8}>\r\n      <Paper className={classes.paper}>\r\n        <Card className={classes.root}>\r\n     \r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n           <AccountCircleIcon/>\r\n          </Avatar>\r\n        }\r\n  \r\n              title={`${name}   :   ${number}`}\r\n       \r\n      />\r\n \r\n       <span onClick={() => dispatch(deleteContacts(id))}>\r\n      <BsTrashFill />\r\n    </span>\r\n      <CardActions disableSpacing>\r\n       \r\n   \r\n      </CardActions>\r\n      \r\n       \r\n      \r\n    </Card>\r\n    \r\n      \r\n    </Paper>\r\n    </Grid>\r\n    </div>\r\n  )\r\n}\r\nexport default PhoneBook\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { filterItem } from '../../redux/contacts/contacts-actions'\r\n\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors'\r\n\r\nfunction PhoneBookFilter() {\r\n  const useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n\r\n  const value = useSelector(contactsSelectors.getFilter)\r\n\r\n  const onChange = (event) => {\r\n    const value = event.target.value\r\n\r\n    dispatch(filterItem(value))\r\n  }\r\n\r\n  return (\r\n    <TextField\r\n       onChange={onChange}\r\n          type=\"text\"\r\n          value={value}\r\n        className={classes.margin}\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"Filter contacts by name\"\r\n      \r\n      />\r\n   \r\n  )\r\n}\r\n\r\nexport default PhoneBookFilter\r\n","export  const filterContacts=(contacts, filter)=> {\r\n    const normalizedFilter = filter.toLowerCase().trim();\r\n    console.log(contacts)\r\n    return contacts.filter(contact => \r\n        // console.log(contact.name)\r\n        contact.name.toLowerCase().includes(normalizedFilter),\r\n        // console.log(contact.name)\r\n        );\r\n}\r\n// export default filterContacts;","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styles from './PhoneBookList.module.css'\r\n\r\n// import Spinner from '../Loader/Loader'\r\nimport PhoneBookEditor from '../PhoneBookEditor/PhoneBookEditor'\r\nimport PhoneBook from '../PhoneBook/PhoneBook'\r\nimport PhoneBookFilter from '../PhoneBookFilter/PhoneBookFilter'\r\nimport {filterContacts} from '../../helpers/FilterContacts'\r\nimport { fetchContacts } from '../../redux/contacts/contacts-operations.js';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors'\r\nconst PhoneBookList = () => {\r\n  const filter = useSelector(contactsSelectors.getFilter)\r\nconsole.log(filter)\r\n\r\n  const dispatch = useDispatch()\r\n  const data = useSelector(contactsSelectors.getContacts)\r\n  console.log(data)\r\n \r\n  useEffect(() => { dispatch(fetchContacts()) },[dispatch])\r\n  return (\r\n    <div  className={styles.grid}>\r\n\r\n    <Grid item xs={12} sm={4} className={styles.grid}>\r\n    <Box bgcolor=\"success.main\" color=\"success.contrastText\" p={2}  >\r\n      <PhoneBookEditor />\r\n          <title>CONTACTS</title>\r\n          \r\n    {data.length > 0 && <PhoneBookFilter />}\r\n      <ul>\r\n        { data.length > 0 ? (\r\n          filterContacts(data, filter).map((contact) => (\r\n            <li key={contact.id}>\r\n              <PhoneBook {...contact}/>\r\n            </li>\r\n          ))\r\n        ) : (\r\n        <li>No contacts</li>\r\n        )} \r\n          </ul>\r\n            \r\n      </Box>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\nexport default PhoneBookList\r\n"],"sourceRoot":""}